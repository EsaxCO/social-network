{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Dialogs/Members/Member/Member.jsx","components/Dialogs/Members/Members.jsx","components/Dialogs/SendMessage/SendMessage.jsx","components/Dialogs/Members/Messages/Message.jsx","components/Dialogs/Dialogs.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Member","id","name","className","to","Members","membersData","instance","axios","withCredentials","headers","baseURL","useState","membersList","setMembersList","useEffect","a","get","response","status","data","fetchData","setTimeout","mainMembersData","map","member","key","userName","SendMessageFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","component","rows","SendMessage","mounted","setMounted","sended","setSended","post","body","message","Message","avatar","setMessagesList","items","messagesList","Preloader","isLoading","mainMessageData","item","src","blocker","alt","Messages","mainDialogsData","user","exact","path","render","photos","small","Dialogs","dialogsData","messagesData"],"mappings":"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","file":"static/js/4.291b7a33.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\r\nimport '../../../css/Dialogs/Members/Member/Member.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Member = ({id,name}) => {\r\n    return (\r\n        <li className=\"section-dialogs-inner-members-li\">\r\n            <NavLink className=\"section-dialogs-inner-members-li-url\" to={\"/home/dialogs/\" + id}>{name}</NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Member;","import React from 'react';\r\nimport '../../css/Dialogs/Members/Members.css';\r\nimport Member from './Member/Member';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport * as axios from 'axios';\r\n\r\nconst Members = ({ membersData }) => {\r\n    const instance = axios.create({\r\n        withCredentials: true,\r\n        headers: { \"API-KEY\": \"9832db98-b9d3-460c-9cab-5d06ff193b07\" },\r\n        baseURL: \"https://social-network.samuraijs.com/api/1.0/\"\r\n    });\r\n    let [membersList, setMembersList] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await instance.get(`/dialogs`);\r\n            if (response.status === 200) {\r\n                setMembersList(response.data);\r\n            }\r\n        }\r\n        fetchData(); \r\n    }, [])\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await instance.get(`/dialogs`);\r\n            if (response.status === 200) {\r\n                setMembersList(response.data);\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            fetchData();\r\n        }, 15000); // fix after work\r\n    }, [membersList])\r\n    let mainMembersData = membersList.map((member) => {\r\n        return <Member key={member.id} id={member.id} name={member.userName} />;\r\n    });\r\n    return (\r\n        <ul className=\"section-dialogs-inner-members\">\r\n            {mainMembersData}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Members;","import React from 'react';\r\nimport '../../css/Dialogs/SendMessage/SendMessage.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport * as axios from 'axios';\r\n\r\nconst SendMessageForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} name=\"SendMessage\">\r\n            <div className=\"section-dialogs-inner-newmessage\">\r\n                <Field name=\"message\" component=\"textarea\" className=\"section-dialogs-inner-newmessage-input\" id=\"\" rows=\"2\"></Field>\r\n                <button className=\"section-dialogs-inner-newmessage-button\">Send Message</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst SendMessageFormRedux = reduxForm({ form: \"SendMessageFormn\" })(SendMessageForm);\r\n\r\nconst SendMessage = ({ id }) => {\r\n    const instance = axios.create({\r\n        withCredentials: true,\r\n        headers: { \"API-KEY\": \"9832db98-b9d3-460c-9cab-5d06ff193b07\" },\r\n        baseURL: \"https://social-network.samuraijs.com/api/1.0/\"\r\n    });\r\n    let [mounted, setMounted] = useState(false);\r\n    let [sended, setSended] = useState(\"\");\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await instance.post(`/dialogs/${id}/messages`, { body: sended });\r\n            if (response.status === 200) {\r\n                setSended(\"\");\r\n            }\r\n        }\r\n        if (mounted) {\r\n            fetchData();\r\n            setMounted(false);\r\n        }\r\n    }, [mounted]);\r\n    let onSubmit = ({ message }) => {\r\n        setSended(message);\r\n        setMounted(true);\r\n    }\r\n    return (\r\n        <SendMessageFormRedux onSubmit={onSubmit} />\r\n    );\r\n}\r\n\r\nexport default SendMessage;","import React from 'react';\r\nimport '../../../scss/Dialogs/Members/Messages/Message.scss';\r\nimport blocker from '../../../../img/default-avatar.png'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport * as axios from 'axios';\r\nimport { Route } from 'react-router-dom';\r\nimport SendMessage from '../../SendMessage/SendMessage';\r\nimport Preloader from '../../../commons/Preloader/Preloader';\r\n\r\nconst Message = ({ id, avatar }) => {\r\n    const instance = axios.create({\r\n        withCredentials: true,\r\n        headers: { \"API-KEY\": \"9832db98-b9d3-460c-9cab-5d06ff193b07\" },\r\n        baseURL: \"https://social-network.samuraijs.com/api/1.0/\"\r\n    });\r\n    let [mounted, setMounted] = useState(false);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await instance.get(`/dialogs/${id}/messages`);\r\n            if (response.status === 200) {\r\n                setMessagesList(response.data.items);\r\n                setMounted(true);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    let [messagesList, setMessagesList] = useState(null);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await instance.get(`/dialogs/${id}/messages`);\r\n            if (response.status === 200) {\r\n                setMessagesList(response.data.items);\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            fetchData();\r\n        }, 5000)\r\n    }, [messagesList]);\r\n    if (mounted === false) {\r\n        return <div className=\"MessagesLoader\"><Preloader isLoading={true} /></div>\r\n    }\r\n    let mainMessageData = messagesList.map((item) => {\r\n        return (\r\n            <div key={item.id} className=\"section-dialogs-inner-active-message\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-2\">\r\n                        <div className=\"section-dialogs-inner-active-message-avatar\">\r\n                            <img className=\"rounded-circle\" src={avatar ? avatar : blocker} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-10\">\r\n                        <div className=\"section-dialogs-inner-active-message-item center-block\">\r\n                            {item.body}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"section-dialogs-inner-active\">\r\n            {mainMessageData}\r\n            <SendMessage mounted={mounted} id={id} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst Messages = ({ membersList }) => {\r\n    if (membersList === null) {\r\n        return <div className=\"MessagesLoader\"><Preloader isLoading={true} /></div>\r\n    }\r\n    let mainDialogsData = membersList.map((user) => (<Route exact path={\"/home/dialogs/\" + user.id} render={() => <Message key={user.id} avatar={user.photos.small} id={user.id} />} />));\r\n    return (\r\n        <>\r\n            <div className=\"section-dialogs-inner-active\">\r\n                {mainDialogsData}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport '../css/Dialogs//Dialogs.css';\r\nimport Members from './Members/Members';\r\nimport Message from './Members/Messages/Message';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport * as axios from 'axios';\r\n\r\nconst Dialogs = ({ dialogsData, messagesData }) => {\r\n    const instance = axios.create({\r\n        withCredentials: true,\r\n        headers: { \"API-KEY\": \"9832db98-b9d3-460c-9cab-5d06ff193b07\" },\r\n        baseURL: \"https://social-network.samuraijs.com/api/1.0/\"\r\n    });\r\n    let [membersList, setMembersList] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await instance.get(`/dialogs`);\r\n            if (response.status === 200) {\r\n                setMembersList(response.data);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"section-dialogs\">\r\n                <div className=\"section-dialogs-inner\">\r\n                    <div className=\"col-sm-3\">\r\n                        <Members />\r\n                    </div>\r\n                    <div className=\"col-sm-9\">\r\n                        <Message membersList={membersList} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Dialogs;"],"sourceRoot":""}